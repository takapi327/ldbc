version = 3.9.9

maxColumn = 120

# runner
runner.dialect = scala3

# project
project.git            = true
project.excludeFilters = ["target/"]

# scaladoc
docstrings.style = keep

# align
align.preset                   = more
align.arrowEnumeratorGenerator = true
align {
  tokens."+" = [
    {
      code   = "=>"
      owners = [
        {
          regex = "(Case|TypeCase)"
        },
      ]
    },
    {
      code   = ":"
      owners = [
        {
          regex = "(Enumerator\\.Val|Defn\\.(Va(l|r)|GivenAlias|Def|Type)|Decl\\.Def)"
        },
        {
          regex   = "Term\\.Param"
          parents = [ "Ctor\\.Primary" ]
        },
        {
          regex   = "Term\\.Param"
          parents = [ "Defn\\." ]
        },
        {
          regex   = "Term\\.Param"
          parents = [ "Decl\\.Def" ]
        }
      ]
    },
    {
      code   = "="
      owners = [
        {
          regex = "(Enumerator\\.Val|Defn\\.(Va(l|r)|GivenAlias|Def|Type))"
        },
        {
          regex   = "Term\\.Param"
          parents = [ "Ctor\\.Primary" ]
        }
        {
          regex = "Term\\.Assign"
        },
      ]
    }
  ]
}

# indent
indent.matchSite                  = 2
indent.caseSite                   = 2
indent.defnSite                   = 2
indent.extendSite                 = 2
indent.withSiteRelativeToExtends  = 3
indent.commaSiteRelativeToExtends = 8

# danglingParentheses
danglingParentheses.defnSite = true

# verticalMultiline
verticalMultiline.atDefnSite            = false
verticalMultiline.arityThreshold        = 2
verticalMultiline.newlineAfterOpenParen = true

# spaces
spaces.inImportCurlyBraces             = true
spaces.inInterpolatedStringCurlyBraces = true

# newlines
newlines.implicitParamListModifierPrefer = after
newlines.beforeCurlyLambdaParams         = multilineWithCaseOnly

rewrite.trailingCommas.style = never
rewrite.scala3.convertToNewSyntax = true

rewrite {
  rules = [Imports]
  imports {
    sort = original
    groups = [
      ["java\\..*"],
      ["javax\\..*"],
      ["scala\\..*", "dotty\\..*"],
      ["sbt\\..*"],
      ["sbtcrossproject\\..*"],
      ["de\\.heikoseeberger\\..*"],
      ["org\\.openjdk\\..*"],
      ["org\\.apache\\..*"],
      ["org\\.slf4j\\..*"],
      ["org\\.schemaspy\\..*"],
      ["com\\.mysql\\..*"],
      ["com\\.zaxxer\\..*"],
      ["com\\.comcast\\..*"],
      ["scodec\\..*"],
      ["cats\\..*"],
      ["cats\\.effect\\..*"],
      ["epollcat\\.unsafe\\..*"]
      ["fs2\\..*"],
      ["io\\.circe\\..*"],
      ["laika\\..*"],
      ["org\\.typelevel\\..*"],
      ["org\\.scalatest\\..*"],
      ["org\\.specs2\\..*"],
      ["munit\\..*"],
      ["slick\\..*"],
      ["doobie\\..*"]
      ["ldbc\\.core\\..*"],
      ["ldbc\\.sql\\..*"],
      ["ldbc\\.dsl\\..*"],
      ["ldbc\\.statement\\..*"],
      ["ldbc\\.query\\..*"],
      ["ldbc\\.schema\\..*"],
      ["ldbc\\.codegen\\..*"],
      ["ldbc\\.connector\\..*"],
      ["jdbc\\.connector\\..*"],
      ["ldbc\\.hikari\\..*"],
      ["ldbc\\.schemaspy\\..*"],
      ["ldbc\\..*"],
      [".*"],
    ]
  }
}

fileOverride {
  "glob:**/plugin/**/*.scala" {
    runner.dialect = scala212
    rewrite.scala3.convertToNewSyntax = false
    runner.dialectOverride.allowSignificantIndentation = false
  }
  "glob:**/project/*.scala" {
    runner.dialect = scala212
    rewrite.scala3.convertToNewSyntax = false
    runner.dialectOverride.allowSignificantIndentation = false
  }
}
